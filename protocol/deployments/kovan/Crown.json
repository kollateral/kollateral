{
  "address": "0x26648B227Fee83206dFa6A3A2374367edd3F1A51",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "king",
              "type": "address"
            }
          ],
          "internalType": "struct Crown.CrownArgs",
          "name": "_args",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3a99f129a8e161785a3321989a5b74c50ae824731883f0f2dff68b031dd5bef4",
  "receipt": {
    "to": null,
    "from": "0xfEeDc0DE1EBE0A72f52590Df786101e1c3944545",
    "contractAddress": "0x26648B227Fee83206dFa6A3A2374367edd3F1A51",
    "transactionIndex": 0,
    "gasUsed": "3113138",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000010001000001000000000800000000000000000008020000000000000000000800000000000000000000000000000000400020000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010020000000000000000000000040000000000000000000000000000000000000000000",
    "blockHash": "0x1f670073f4404e7b14d30a2638e77abdf07451edf326426c663c78658d910531",
    "transactionHash": "0x3a99f129a8e161785a3321989a5b74c50ae824731883f0f2dff68b031dd5bef4",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 23694380,
        "transactionHash": "0x3a99f129a8e161785a3321989a5b74c50ae824731883f0f2dff68b031dd5bef4",
        "address": "0x26648B227Fee83206dFa6A3A2374367edd3F1A51",
        "topics": [
          "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003600000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000220000000000000000000000000f8853e42d2ee1ce7a2891c0fdb1ee83df9d3e79e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c0000000000000000000000000000000000000000000000000000000000000000000000000000000002a87b08ef24a1c3d3198bbb488c05ff6ae16f75000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c00000000000000000000000000000000000000000000000000000000adfca15e000000000000000000000000000000000000000000000000000000007a0ed6270000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000ebe453f307b5e12fa285600870f52458a89e47e30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000028da5cb5b00000000000000000000000000000000000000000000000000000000f2fde38b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0x1f670073f4404e7b14d30a2638e77abdf07451edf326426c663c78658d910531"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 23694380,
        "transactionHash": "0x3a99f129a8e161785a3321989a5b74c50ae824731883f0f2dff68b031dd5bef4",
        "address": "0x26648B227Fee83206dFa6A3A2374367edd3F1A51",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000a26a1ebca217c8090f9a7759ef82f19a1e19ea1"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x1f670073f4404e7b14d30a2638e77abdf07451edf326426c663c78658d910531"
      }
    ],
    "blockNumber": 23694380,
    "cumulativeGasUsed": "3113138",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      [
        "0xF8853E42d2Ee1Ce7A2891C0fDb1ee83Df9D3e79e",
        0,
        [
          "0x1f931c1c"
        ]
      ],
      [
        "0x02a87b08Ef24A1c3D3198BBb488c05fF6aE16F75",
        0,
        [
          "0xcdffacc6",
          "0x52ef6b2c",
          "0xadfca15e",
          "0x7a0ed627",
          "0x01ffc9a7"
        ]
      ],
      [
        "0xEBE453F307B5e12Fa285600870f52458a89e47e3",
        0,
        [
          "0x8da5cb5b",
          "0xf2fde38b"
        ]
      ]
    ],
    [
      "0x0A26a1eBca217c8090f9a7759Ef82f19a1E19ea1"
    ]
  ],
  "solcInputHash": "c07a6e35bcea225e414aa9a698302f39",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"king\",\"type\":\"address\"}],\"internalType\":\"struct Crown.CrownArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Crown.sol\":\"Crown\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Crown.sol\":{\"content\":\"/*\\n\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.1;\\n\\nimport \\\"./libraries/diamond/LibDiamond.sol\\\";\\nimport \\\"./libraries/diamond/LibOwnership.sol\\\";\\nimport \\\"./interfaces/diamond/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/diamond/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/access/IERC173.sol\\\";\\nimport \\\"./interfaces/introspection/IERC165.sol\\\";\\n\\ncontract Crown {\\n\\t// more arguments are added to this struct\\n\\t// this avoids stack too deep errors\\n\\tstruct CrownArgs {\\n\\t\\taddress king;\\n\\t}\\n\\n\\tconstructor(IDiamondCut.FacetCut[] memory _diamondCut, CrownArgs memory _args) payable {\\n\\t\\tLibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n\\t\\tLibOwnership.setContractOwner(_args.king);\\n\\n\\t\\tLibDiamondStorage.DiamondStorage storage ds = LibDiamondStorage.diamondStorage();\\n\\n\\t\\t// adding ERC165 data\\n\\t\\tds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n\\t\\tds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n\\t\\tds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n\\t\\tds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n\\t}\\n\\n\\t// Find facet for function that is called and execute the\\n\\t// function if a facet is found and return any value.\\n\\tfallback() external payable {\\n\\t\\tLibDiamondStorage.DiamondStorage storage ds;\\n\\t\\tbytes32 position = LibDiamondStorage.DIAMOND_STORAGE_POSITION;\\n\\n\\t\\tassembly {\\n\\t\\t\\tds.slot := position\\n\\t\\t}\\n\\n\\t\\taddress facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n\\t\\trequire(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0, 0, calldatasize())\\n\\t\\t\\tlet result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n\\t\\t\\treturndatacopy(0, 0, returndatasize())\\n\\t\\t\\tswitch result\\n\\t\\t\\t\\tcase 0 {\\n\\t\\t\\t\\t\\trevert(0, returndatasize())\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdefault {\\n\\t\\t\\t\\t\\treturn(0, returndatasize())\\n\\t\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treceive() external payable {}\\n}\\n\",\"keccak256\":\"0x433dd0d267f6e547a27c9a3719de099e7626c97fa1b0bd14988a7d497e3d41b6\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/access/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173 {\\n\\t/// @dev This emits when ownership of a contract changes.\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n\\t/// @notice Get the address of the owner\\n\\t/// @return owner_ The address of the owner.\\n\\tfunction owner() external view returns (address owner_);\\n\\n\\t/// @notice Set the address of the new owner of the contract\\n\\t/// @dev Set _newOwner to address(0) to renounce any ownership.\\n\\t/// @param _newOwner The address of the new owner of the contract\\n\\tfunction transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xb9e5dbfa97d253cc0a804aa8810f35e5f81c8e674c9843e2c7bf20f708e6e2a2\",\"license\":\"MIT\"},\"contracts/interfaces/diamond/IDiamondCut.sol\":{\"content\":\"/*\\n\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n/**\\n * A cut is a powerful cutter used to alter diamonds.\\n */\\ninterface IDiamondCut {\\n\\tenum FacetCutAction { Add, Replace, Remove }\\n\\t// Add=0, Replace=1, Remove=2\\n\\n\\tstruct FacetCut {\\n\\t\\taddress facetAddress;\\n\\t\\tFacetCutAction action;\\n\\t\\tbytes4[] functionSelectors;\\n\\t}\\n\\n\\t/// @notice Add/replace/remove any number of functions and optionally execute\\n\\t///         a function with delegatecall\\n\\t/// @param _diamondCut Contains the facet addresses and function selectors\\n\\t/// @param _init The address of the contract or facet to execute _calldata\\n\\t/// @param _calldata A function call, including function selector and arguments\\n\\t///                  _calldata is executed with delegatecall on _init\\n\\tfunction diamondCut(\\n\\t\\tFacetCut[] calldata _diamondCut,\\n\\t\\taddress _init,\\n\\t\\tbytes calldata _calldata\\n\\t) external;\\n\\n\\tevent DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xc47c05cd8e91fc42a5e98411e1b6d0bd5b7f03ac9177d3235645ea1df58e9673\",\"license\":\"MIT\"},\"contracts/interfaces/diamond/IDiamondLoupe.sol\":{\"content\":\"/*\\n\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n/**\\n * A loupe is a small magnifying glass used to look at diamonds.\\n */\\ninterface IDiamondLoupe {\\n\\t/// These functions are expected to be called frequently by off-chain code.\\n\\t/// (and almost never by on-chain code)\\n\\tstruct Facet {\\n\\t\\taddress facetAddress;\\n\\t\\tbytes4[] functionSelectors;\\n\\t}\\n\\n\\t/// @notice Gets all facet addresses and their four byte function selectors.\\n\\t/// @return facets_ Facet\\n\\tfunction facets() external view returns (Facet[] memory facets_);\\n\\n\\t/// @notice Gets all the function selectors supported by a specific facet.\\n\\t/// @param _facet The facet address.\\n\\t/// @return facetFunctionSelectors_\\n\\tfunction facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n\\t/// @notice Get all the facet addresses used by a diamond.\\n\\t/// @return facetAddresses_\\n\\tfunction facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n\\t/// @notice Gets the facet that supports the given selector.\\n\\t/// @dev If facet is not found return address(0).\\n\\t/// @param _functionSelector The function selector.\\n\\t/// @return facetAddress_ The facet address.\\n\\tfunction facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0x787c0a34d727d01c82011477430595212e8ffb952383c18c3a74327e8dfa6aa5\",\"license\":\"MIT\"},\"contracts/interfaces/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n\\t/**\\n\\t * @dev Returns true if this contract implements the interface defined by\\n\\t * `interfaceId`. See the corresponding\\n\\t * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n\\t * to learn more about how these ids are created.\\n\\t *\\n\\t * This function call must use less than 30 000 gas.\\n\\t */\\n\\tfunction supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x47fb51ba47a6f1dd885afda05a6d11d7f6bb24d594dbfaa4411c5185c202265e\",\"license\":\"MIT\"},\"contracts/libraries/diamond/LibDiamond.sol\":{\"content\":\"/*\\n\\n\\tCopyright 2020 Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\n/********************************************************************\\\\\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535 *\\n/********************************************************************/\\n\\nimport \\\"./LibDiamondStorage.sol\\\";\\nimport \\\"../../interfaces/diamond/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n\\tevent DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n\\t// Internal function version of diamondCut.\\n\\t// Like normal proxies you can also execute a function at the time of an upgrade.\\n\\tfunction diamondCut(\\n\\t\\tIDiamondCut.FacetCut[] memory _diamondCut,\\n\\t\\taddress _init,\\n\\t\\tbytes memory _calldata\\n\\t) internal {\\n\\t\\tfor (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n\\t\\t\\tIDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n\\t\\t\\tif (action == IDiamondCut.FacetCutAction.Add) {\\n\\t\\t\\t\\taddFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n\\t\\t\\t} else if (action == IDiamondCut.FacetCutAction.Replace) {\\n\\t\\t\\t\\treplaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n\\t\\t\\t} else if (action == IDiamondCut.FacetCutAction.Remove) {\\n\\t\\t\\t\\tremoveFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\trevert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit DiamondCut(_diamondCut, _init, _calldata);\\n\\t\\tinitializeDiamondCut(_init, _calldata);\\n\\t}\\n\\n\\tfunction addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n\\t\\trequire(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n\\t\\tLibDiamondStorage.DiamondStorage storage ds = LibDiamondStorage.diamondStorage();\\n\\t\\t// uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n\\t\\trequire(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n\\t\\tuint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n\\t\\t// add new facet address if it does not exist\\n\\t\\tif (selectorPosition == 0) {\\n\\t\\t\\tenforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n\\t\\t\\tds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n\\t\\t\\tds.facetAddresses.push(_facetAddress);\\n\\t\\t}\\n\\t\\tfor (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n\\t\\t\\tbytes4 selector = _functionSelectors[selectorIndex];\\n\\t\\t\\taddress oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n\\t\\t\\trequire(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n\\t\\t\\tds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n\\t\\t\\tds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n\\t\\t\\tds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n\\t\\t\\tselectorPosition++;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n\\t\\trequire(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n\\t\\tLibDiamondStorage.DiamondStorage storage ds = LibDiamondStorage.diamondStorage();\\n\\t\\trequire(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n\\t\\tuint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n\\t\\t// add new facet address if it does not exist\\n\\t\\tif (selectorPosition == 0) {\\n\\t\\t\\tenforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n\\t\\t\\tds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n\\t\\t\\tds.facetAddresses.push(_facetAddress);\\n\\t\\t}\\n\\t\\tfor (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n\\t\\t\\tbytes4 selector = _functionSelectors[selectorIndex];\\n\\t\\t\\taddress oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n\\t\\t\\trequire(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n\\t\\t\\tremoveFunction(oldFacetAddress, selector);\\n\\t\\t\\t// add function\\n\\t\\t\\tds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n\\t\\t\\tds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n\\t\\t\\tds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n\\t\\t\\tselectorPosition++;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n\\t\\trequire(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n\\t\\tLibDiamondStorage.DiamondStorage storage ds = LibDiamondStorage.diamondStorage();\\n\\t\\t// if function does not exist then do nothing and return\\n\\t\\trequire(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n\\t\\tfor (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n\\t\\t\\tbytes4 selector = _functionSelectors[selectorIndex];\\n\\t\\t\\taddress oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n\\t\\t\\tremoveFunction(oldFacetAddress, selector);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction removeFunction(address _facetAddress, bytes4 _selector) internal {\\n\\t\\tLibDiamondStorage.DiamondStorage storage ds = LibDiamondStorage.diamondStorage();\\n\\t\\trequire(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n\\t\\t// an immutable function is a function defined directly in a diamond\\n\\t\\trequire(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n\\t\\t// replace selector with last selector, then delete last selector\\n\\t\\tuint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n\\t\\tuint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n\\t\\t// if not the same then replace _selector with lastSelector\\n\\t\\tif (selectorPosition != lastSelectorPosition) {\\n\\t\\t\\tbytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n\\t\\t\\tds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n\\t\\t\\tds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n\\t\\t}\\n\\t\\t// delete the last selector\\n\\t\\tds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n\\t\\tdelete ds.selectorToFacetAndPosition[_selector];\\n\\n\\t\\t// if no more selectors for facet address then delete the facet address\\n\\t\\tif (lastSelectorPosition == 0) {\\n\\t\\t\\t// replace facet address with last facet address and delete last facet address\\n\\t\\t\\tuint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n\\t\\t\\tuint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n\\t\\t\\tif (facetAddressPosition != lastFacetAddressPosition) {\\n\\t\\t\\t\\taddress lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n\\t\\t\\t\\tds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n\\t\\t\\t\\tds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n\\t\\t\\t}\\n\\t\\t\\tds.facetAddresses.pop();\\n\\t\\t\\tdelete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n\\t\\tif (_init == address(0)) {\\n\\t\\t\\trequire(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n\\t\\t} else {\\n\\t\\t\\trequire(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n\\t\\t\\tif (_init != address(this)) {\\n\\t\\t\\t\\tenforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n\\t\\t\\t}\\n\\t\\t\\t(bool success, bytes memory error) = _init.delegatecall(_calldata);\\n\\t\\t\\tif (!success) {\\n\\t\\t\\t\\tif (error.length > 0) {\\n\\t\\t\\t\\t\\t// bubble up the error\\n\\t\\t\\t\\t\\trevert(string(error));\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\trevert(\\\"LibDiamondCut: _init function reverted\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n\\t\\tuint256 contractSize;\\n\\t\\tassembly {\\n\\t\\t\\tcontractSize := extcodesize(_contract)\\n\\t\\t}\\n\\t\\trequire(contractSize > 0, _errorMessage);\\n\\t}\\n}\\n\",\"keccak256\":\"0xa0955094468d08857face6561c19587d20cd26344e4da2ec56d0dfd786837d6a\",\"license\":\"MIT\"},\"contracts/libraries/diamond/LibDiamondStorage.sol\":{\"content\":\"/*\\n\\n\\tCopyright 2020 Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\nlibrary LibDiamondStorage {\\n\\tbytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n\\tstruct FacetAddressAndPosition {\\n\\t\\taddress facetAddress;\\n\\t\\tuint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n\\t}\\n\\n\\tstruct FacetFunctionSelectors {\\n\\t\\tbytes4[] functionSelectors;\\n\\t\\tuint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n\\t}\\n\\n\\tstruct DiamondStorage {\\n\\t\\t// maps function selector to the facet address and\\n\\t\\t// the position of the selector in the facetFunctionSelectors.selectors array\\n\\t\\tmapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n\\t\\t// maps facet addresses to function selectors\\n\\t\\tmapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n\\t\\t// facet addresses\\n\\t\\taddress[] facetAddresses;\\n\\t\\t// Used to query if a contract implements an interface.\\n\\t\\t// Used to implement ERC-165.\\n\\t\\tmapping(bytes4 => bool) supportedInterfaces;\\n\\t\\t// owner of the contract\\n\\t\\taddress contractOwner;\\n\\t}\\n\\n\\tfunction diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n\\t\\tbytes32 position = DIAMOND_STORAGE_POSITION;\\n\\t\\tassembly {\\n\\t\\t\\tds.slot := position\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x1466ca90168235908d437b25fea95ed5a579bbab3cf217ad77a3e273779d4b99\",\"license\":\"MIT\"},\"contracts/libraries/diamond/LibOwnership.sol\":{\"content\":\"/*\\n\\n\\tCopyright 2020 Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\n/********************************************************************\\\\\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535 *\\n/********************************************************************/\\n\\nimport \\\"./LibDiamondStorage.sol\\\";\\n\\nlibrary LibOwnership {\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n\\tfunction setContractOwner(address _newOwner) internal {\\n\\t\\tLibDiamondStorage.DiamondStorage storage ds = LibDiamondStorage.diamondStorage();\\n\\n\\t\\taddress previousOwner = ds.contractOwner;\\n\\t\\trequire(previousOwner != _newOwner, \\\"Previous owner and new owner must be different\\\");\\n\\n\\t\\tds.contractOwner = _newOwner;\\n\\n\\t\\temit OwnershipTransferred(previousOwner, _newOwner);\\n\\t}\\n\\n\\tfunction contractOwner() internal view returns (address contractOwner_) {\\n\\t\\tcontractOwner_ = LibDiamondStorage.diamondStorage().contractOwner;\\n\\t}\\n\\n\\tfunction enforceIsContractOwner() internal view {\\n\\t\\trequire(msg.sender == LibDiamondStorage.diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n\\t}\\n\\n\\t/*\\n\\t * Helpful modifier, Ownable-style\\n\\t */\\n\\tmodifier onlyOwner {\\n\\t\\trequire(msg.sender == LibDiamondStorage.diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n\\t\\t_;\\n\\t}\\n}\\n\",\"keccak256\":\"0x68e9868f60bc4140a8a0bd93b05858e9bf7411ae33b5e20f5c52c311e2774d31\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}