{
  "address": "0xEBE453F307B5e12Fa285600870f52458a89e47e3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1d4e902c6764bc8f73f15916e16c8ecaa1ee81f3429bc626004132011b1e480f",
  "receipt": {
    "to": null,
    "from": "0xfEeDc0DE1EBE0A72f52590Df786101e1c3944545",
    "contractAddress": "0xEBE453F307B5e12Fa285600870f52458a89e47e3",
    "transactionIndex": 9,
    "gasUsed": "325942",
    "logsBloom": "0x
    "blockHash": "0x5964c790b0889eef413343a6135846246051024192226ebb560051c03bbb412c",
    "transactionHash": "0x1d4e902c6764bc8f73f15916e16c8ecaa1ee81f3429bc626004132011b1e480f",
    "logs": [],
    "blockNumber": 9751312,
    "cumulativeGasUsed": "1066034",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "ebf4e376a412abf69082cb202b4c6b6f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"owner_\":\"The address of the owner.\"}},\"transferOwnership(address)\":{\"details\":\"Set _newOwner to address(0) to renounce any ownership.\",\"params\":{\"_newOwner\":\"The address of the new owner of the contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Get the address of the owner\"},\"transferOwnership(address)\":{\"notice\":\"Set the address of the new owner of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/OwnershipFacet.sol\":\"OwnershipFacet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/facets/OwnershipFacet.sol\":{\"content\":\"/*\\n\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\nimport \\\"../libraries/diamond/LibOwnership.sol\\\";\\nimport \\\"../interfaces/access/IERC173.sol\\\";\\n\\ncontract OwnershipFacet is IERC173 {\\n\\tfunction transferOwnership(address _newOwner) external override {\\n\\t\\tLibOwnership.enforceIsContractOwner();\\n\\t\\tLibOwnership.setContractOwner(_newOwner);\\n\\t}\\n\\n\\tfunction owner() external view override returns (address owner_) {\\n\\t\\towner_ = LibOwnership.contractOwner();\\n\\t}\\n}\\n\",\"keccak256\":\"0x4d86b6e7c7d0e5c259c82ed5cec4523c64e76e780aaf50e247f7dec09d9090fd\",\"license\":\"MIT\"},\"contracts/interfaces/access/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173 {\\n\\t/// @dev This emits when ownership of a contract changes.\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n\\t/// @notice Get the address of the owner\\n\\t/// @return owner_ The address of the owner.\\n\\tfunction owner() external view returns (address owner_);\\n\\n\\t/// @notice Set the address of the new owner of the contract\\n\\t/// @dev Set _newOwner to address(0) to renounce any ownership.\\n\\t/// @param _newOwner The address of the new owner of the contract\\n\\tfunction transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xb9e5dbfa97d253cc0a804aa8810f35e5f81c8e674c9843e2c7bf20f708e6e2a2\",\"license\":\"MIT\"},\"contracts/libraries/diamond/LibDiamondStorage.sol\":{\"content\":\"/*\\n\\n\\tCopyright 2020 Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\nlibrary LibDiamondStorage {\\n\\tbytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n\\tstruct FacetAddressAndPosition {\\n\\t\\taddress facetAddress;\\n\\t\\tuint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n\\t}\\n\\n\\tstruct FacetFunctionSelectors {\\n\\t\\tbytes4[] functionSelectors;\\n\\t\\tuint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n\\t}\\n\\n\\tstruct DiamondStorage {\\n\\t\\t// maps function selector to the facet address and\\n\\t\\t// the position of the selector in the facetFunctionSelectors.selectors array\\n\\t\\tmapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n\\t\\t// maps facet addresses to function selectors\\n\\t\\tmapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n\\t\\t// facet addresses\\n\\t\\taddress[] facetAddresses;\\n\\t\\t// Used to query if a contract implements an interface.\\n\\t\\t// Used to implement ERC-165.\\n\\t\\tmapping(bytes4 => bool) supportedInterfaces;\\n\\t\\t// owner of the contract\\n\\t\\taddress contractOwner;\\n\\t}\\n\\n\\tfunction diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n\\t\\tbytes32 position = DIAMOND_STORAGE_POSITION;\\n\\t\\tassembly {\\n\\t\\t\\tds.slot := position\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x1466ca90168235908d437b25fea95ed5a579bbab3cf217ad77a3e273779d4b99\",\"license\":\"MIT\"},\"contracts/libraries/diamond/LibOwnership.sol\":{\"content\":\"/*\\n\\n\\tCopyright 2020 Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n    Copyright 2020-2021 ARM Finance LLC\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n*/\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\n/********************************************************************\\\\\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535 *\\n/********************************************************************/\\n\\nimport \\\"./LibDiamondStorage.sol\\\";\\n\\nlibrary LibOwnership {\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n\\tfunction setContractOwner(address _newOwner) internal {\\n\\t\\tLibDiamondStorage.DiamondStorage storage ds = LibDiamondStorage.diamondStorage();\\n\\n\\t\\taddress previousOwner = ds.contractOwner;\\n\\t\\trequire(previousOwner != _newOwner, \\\"Previous owner and new owner must be different\\\");\\n\\n\\t\\tds.contractOwner = _newOwner;\\n\\n\\t\\temit OwnershipTransferred(previousOwner, _newOwner);\\n\\t}\\n\\n\\tfunction contractOwner() internal view returns (address contractOwner_) {\\n\\t\\tcontractOwner_ = LibDiamondStorage.diamondStorage().contractOwner;\\n\\t}\\n\\n\\tfunction enforceIsContractOwner() internal view {\\n\\t\\trequire(msg.sender == LibDiamondStorage.diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n\\t}\\n\\n\\t/*\\n\\t * Helpful modifier, Ownable-style\\n\\t */\\n\\tmodifier onlyOwner {\\n\\t\\trequire(msg.sender == LibDiamondStorage.diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n\\t\\t_;\\n\\t}\\n}\\n\",\"keccak256\":\"0x68e9868f60bc4140a8a0bd93b05858e9bf7411ae33b5e20f5c52c311e2774d31\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506104f5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b604051610050919061036c565b60405180910390f35b610073600480360381019061006e91906102ee565b610084565b005b600061007f610098565b905090565b61008c6100cb565b61009581610166565b50565b60006100a26102ac565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100d36102ac565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b90610387565b60405180910390fd5b565b60006101706102ac565b905060008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561020a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610201906103a7565b60405180910390fd5b828260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000813590506102e8816104a8565b92915050565b60006020828403121561030057600080fd5b600061030e848285016102d9565b91505092915050565b610320816103d8565b82525050565b60006103336022836103c7565b915061033e8261040a565b604082019050919050565b6000610356602e836103c7565b915061036182610459565b604082019050919050565b60006020820190506103816000830184610317565b92915050565b600060208201905081810360008301526103a081610326565b9050919050565b600060208201905081810360008301526103c081610349565b9050919050565b600082825260208201905092915050565b60006103e3826103ea565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f50726576696f7573206f776e657220616e64206e6577206f776e6572206d757360008201527f7420626520646966666572656e74000000000000000000000000000000000000602082015250565b6104b1816103d8565b81146104bc57600080fd5b5056fea2646970667358221220f2eb810e3c826c55af918cf60f53c9b52409dea02fe4770f899268b279617c5f64736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b604051610050919061036c565b60405180910390f35b610073600480360381019061006e91906102ee565b610084565b005b600061007f610098565b905090565b61008c6100cb565b61009581610166565b50565b60006100a26102ac565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100d36102ac565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b90610387565b60405180910390fd5b565b60006101706102ac565b905060008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561020a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610201906103a7565b60405180910390fd5b828260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000813590506102e8816104a8565b92915050565b60006020828403121561030057600080fd5b600061030e848285016102d9565b91505092915050565b610320816103d8565b82525050565b60006103336022836103c7565b915061033e8261040a565b604082019050919050565b6000610356602e836103c7565b915061036182610459565b604082019050919050565b60006020820190506103816000830184610317565b92915050565b600060208201905081810360008301526103a081610326565b9050919050565b600060208201905081810360008301526103c081610349565b9050919050565b600082825260208201905092915050565b60006103e3826103ea565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f50726576696f7573206f776e657220616e64206e6577206f776e6572206d757360008201527f7420626520646966666572656e74000000000000000000000000000000000000602082015250565b6104b1816103d8565b81146104bc57600080fd5b5056fea2646970667358221220f2eb810e3c826c55af918cf60f53c9b52409dea02fe4770f899268b279617c5f64736f6c63430008010033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "returns": {
          "owner_": "The address of the owner."
        }
      },
      "transferOwnership(address)": {
        "details": "Set _newOwner to address(0) to renounce any ownership.",
        "params": {
          "_newOwner": "The address of the new owner of the contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "owner()": {
        "notice": "Get the address of the owner"
      },
      "transferOwnership(address)": {
        "notice": "Set the address of the new owner of the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}